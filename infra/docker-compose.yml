version: '3.3'
services:

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
    networks:
      - foodgram-network
    depends_on:
      - db
  
  nginx:
    container_name: foodgram-proxy
    image: nginx:stable-alpine3.20-perl
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend
      - db
    networks:
      - foodgram-network

  db:
    image: postgres:16.8-alpine3.20
    container_name: foodgram-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - foodgram-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]  # Проверяет готовность PostgreSQL
      interval: 5s
      timeout: 5s
      retries: 10


  backend:
    build: ../backend
    container_name: foodgram-backend
    ports:
      - "8000:8000"
    volumes:
      - static_value:/backend/static/
      - media_value:/backend/media/
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - foodgram-network


volumes:
  postgres_data:
  static_value:
  media_value:

networks:
  foodgram-network:
    driver: bridge